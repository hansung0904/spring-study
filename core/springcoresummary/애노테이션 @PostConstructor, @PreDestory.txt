애노테이션 @PostConstructor, @PreDestory

실행결과
--------------------------------------------------
생성자 호출, url = null
NetworkClient.init
connect: http://hello-spring.dev
call: http://hello-spring.dev message = 초기화 연결 메시지
19:40:50.269 [main] DEBUG
org.springframework.context.annotation.AnnotationConfigApplicationContext -
Closing NetworkClient.close
close + http://hello-spring.dev
--------------------------------------------------
@PostConstruct, @PreDestory이 두 애노테이션을 사용하면 가장 편리하게 초기화와 종료를 실행할 수 있다.

@PostConstruct, @PreDestroy 애노테이션 특징
-> 최신 스프링에서 가장 권장하는 방법이다.
-> 애노테이션 하나만 붙이면 되므로 매우 편리하다.
-> 패키지를 잘 보면 javax.annotation.PostConstructor이다. 스프링에 종속적인 기술이 아니라 JSR-250라는
자바 표준이다. 따라서 스프링이 아닌 다른 컨테이너에서도 동작한다.
-> 컴포넌트 스캔과 잘 어울린다.
-> 유일한 단점은 외부 라이브러리에는 적용 못한다는 점이다. 외부 라이브러리를 초기화, 종료 해야 하면 @Bean의 기능을
이용하자.

정리
-> @PostConstruct, @PreDestroy 애노테이션을 사용하자.
-> 코드를 고칠 수 없는 외부 라이브러리를 초기화, 종료해야하면 @Bean의 initMethod, destroyMethod를 사용하자.